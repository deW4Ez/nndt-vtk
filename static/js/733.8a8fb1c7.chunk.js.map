{"version":3,"file":"static/js/733.8a8fb1c7.chunk.js","mappings":"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","sources":["Geometry/PointPicker.jsx"],"sourcesContent":["import React, {useState, useContext, useRef} from 'react';\n\nimport {\n    View,\n    GeometryRepresentation,\n    Algorithm,\n    Contexts,\n} from 'react-vtk-js';\n\nimport { Representation } from '@kitware/vtk.js/Rendering/Core/Property/Constants';\n\nfunction RepresentationView(props){\n    const view = useContext(Contexts.ViewContext);\n    const onChange = (e) => {\n        const value = Number(e.currentTarget.value);\n        props.setValue(value);\n        setTimeout(view.renderView, 0);\n    };\n\n    return(\n        <select\n            value={props.value}\n            style={{ width: '100%' }}\n            onChange={onChange}\n        >\n            <option value={Representation.POINTS}>Points</option>\n            <option value={Representation.WIREFRAME}>Wireframe</option>\n            <option value={Representation.SURFACE}>Surface</option>\n        </select>\n    )\n}\n\n\nfunction ModelView(props){\n    const view = useContext(Contexts.ViewContext);\n\n    console.log(props.value)\n    return(\n        <select\n            value={props.value}\n            style={{ width: '100%' }}\n            onInput={(ev) => {\n                props.setValue(ev.target.value);\n                setTimeout(view.renderView, 0);\n            }}\n        >\n            <option value=\"vtkConeSource\">Cone</option>\n            <option value=\"vtkCubeSource\">Cube</option>\n            <option value=\"vtkPlaneSource\">Plane</option>\n            <option value=\"vtkSphereSource\">Sphere</option>\n        </select>\n    )\n}\n\nfunction Slider(props) {\n    const view = useContext(Contexts.ViewContext);\n    const onChange = (e) => {\n        const value = Number(e.currentTarget.value);\n        props.setValue(value);\n        setTimeout(view.renderView, 0);\n    };\n\n    return (\n        <input\n            type='range'\n            min='3'\n            max='100'\n            value={props.value}\n            onChange={onChange}\n\n        />\n    );\n}\n\nfunction PointPicker(props) {\n\n    const [resolution, setResolution] = useState(24);\n    const [model, setModel] = useState(\"vtkConeSource\")\n    const [representation, setRepresentation] = useState(Representation.SURFACE)\n    const [worldCoordinates,setWorldCoordinates] = useState([0,0,0])\n\n    function Menu(props){\n        return(\n            <table\n                style={{\n                    position: 'absolute',\n                    top: '25px',\n                    left: '25px',\n                    background: 'white',\n                    padding: '12px',\n                }}\n            >\n                <tbody>\n                    <tr>\n                        <td>\n                            <ModelView value={model} setValue={setModel}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <Slider value={resolution} setValue={setResolution} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <RepresentationView value={representation} setValue={setRepresentation}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>CLick coordinates:</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>x: {worldCoordinates[0].toFixed(4)}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>y: {worldCoordinates[1].toFixed(4)}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <div>z: {worldCoordinates[2].toFixed(4)}</div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n\n\n\n    return (\n        <div style={{ width: '100%', height: '100%' }}>\n            <View\n                cameraViewUp={[0, 0, -1]}\n                cameraPosition={[1, 1, 0]}\n                pickingModes={['hover', 'click', 'select']}\n                onClick={(e) => {\n                    setWorldCoordinates(e.worldPosition)\n                }}\n                showCubeAxes\n            >\n                <Menu/>\n                <GeometryRepresentation\n                    property={{\n                        color: [0.3, 0.3, 1],\n                        representation,\n                }}\n                >\n                    <Algorithm\n                        vtkClass={model}\n                        state={{\n                            height: 2,\n                            radius: 0.75,\n                            resolution,\n                        }}\n                    />\n                </GeometryRepresentation>\n            </View>\n        </div>\n    );\n}\n\nexport default PointPicker;"],"names":["RepresentationView","props","view","useContext","Contexts","value","style","width","onChange","e","Number","currentTarget","setValue","setTimeout","renderView","Representation","ModelView","console","log","onInput","ev","target","Slider","type","min","max","useState","resolution","setResolution","model","setModel","representation","setRepresentation","worldCoordinates","setWorldCoordinates","Menu","position","top","left","background","padding","toFixed","height","cameraViewUp","cameraPosition","pickingModes","onClick","worldPosition","showCubeAxes","property","color","vtkClass","state","radius"],"sourceRoot":""}