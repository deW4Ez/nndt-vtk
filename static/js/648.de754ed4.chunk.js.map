{"version":3,"file":"static/js/648.de754ed4.chunk.js","mappings":"kKAUA,SAASA,EAAOC,GACd,IAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAAAA,aAMxB,OACE,kBACEC,KAAK,QACLC,IAAI,QACJC,IAAI,OACJC,KAAK,OACLC,MAAOR,EAAMQ,MACbC,SAZa,SAACC,GAChB,IAAMF,EAAQG,OAAOD,EAAEE,cAAcJ,OACrCR,EAAMa,SAASL,GACfM,WAAWb,EAAKc,WAAY,EAC9B,EASIC,MAAO,CAAEC,SAAU,WAAYC,OAAQ,IAAKC,KAAM,OAAQC,IAAK,SAGrE,CAqDA,UAnDA,SAAiBpB,GACf,OAAsCqB,EAAAA,EAAAA,UAAS,GAAE,eAA1CC,EAAW,KAAEC,EAAc,KAClC,OACE,gBAAKP,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,QAAS,UAC5C,UAAC,KAAI,CAACC,cAAY,aAChB,SAAC3B,EAAM,CAACS,MAAOc,EAAaT,SAAUU,KACtC,SAAC,KAAsB,CACrBI,OAAQ,CACNC,iBAAkB,OAClBC,WAAY,EACZC,iCAAiC,GAEnCC,SAAU,CACRC,gBAAgB,GAElBC,eAAgB,CAAC,EAAG,IAAK,UAEzB,SAAC,KAAS,CACRC,SAAS,gBACTC,MAAO,CACLb,YAAAA,EACAc,oBAAqB,CAAC,EAAG,OAAQ,YAAa,YAC9C,UAEF,SAAC,KAAU,CACTC,KAAK,OACLC,QAAS,SAACC,GAAG,MACX,IACAC,KAAKC,IAIC,GAHJD,KAAKE,MACFH,EAAI,GAAK,KAAQA,EAAI,GAAK,KACxBA,EAAI,GAAK,KAAQA,EAAI,GAAK,KAEhC,EACF,UAED,SAAC,KAAS,CACRL,SAAS,iBACTC,MAAO,CACLQ,YAAa,IACbC,YAAa,iBAS/B,C","sources":["Geometry/ProcessingPipeline.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport {\n  View,\n  GeometryRepresentation,\n  Algorithm,\n  Calculator,\n  Contexts,\n} from 'react-vtk-js';\n\nfunction Slider(props) {\n  const view = useContext(Contexts.ViewContext);\n  const onChange = (e) => {\n    const value = Number(e.currentTarget.value);\n    props.setValue(value);\n    setTimeout(view.renderView, 0);\n  };\n  return (\n    <input\n      type='range'\n      min='-0.25'\n      max='0.25'\n      step='0.01'\n      value={props.value}\n      onChange={onChange}\n      style={{ position: 'absolute', zIndex: 100, left: '20px', top: '20px' }}\n    />\n  );\n}\n\nfunction Example(props) {\n  const [scaleFactor, setScaleFactor] = useState(0);\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <View showCubeAxes>\n        <Slider value={scaleFactor} setValue={setScaleFactor} />\n        <GeometryRepresentation\n          mapper={{\n            colorByArrayName: 'calc',\n            scalarMode: 3,\n            interpolateScalarsBeforeMapping: true,\n          }}\n          property={{\n            edgeVisibility: true,\n          }}\n          colorDataRange={[0, 0.5]}\n        >\n          <Algorithm\n            vtkClass='vtkWarpScalar'\n            state={{\n              scaleFactor,\n              inputArrayToProcess: [0, 'calc', 'PointData', 'Scalars'],\n            }}\n          >\n            <Calculator\n              name='calc'\n              formula={(xyz) =>\n                0.25 *\n                Math.sin(\n                  Math.sqrt(\n                    (xyz[0] - 0.5) * (xyz[0] - 0.5) +\n                      (xyz[1] - 0.5) * (xyz[1] - 0.5)\n                  ) * 50\n                )\n              }\n            >\n              <Algorithm\n                vtkClass='vtkPlaneSource'\n                state={{\n                  xResolution: 100,\n                  yResolution: 100,\n                }}\n              />\n            </Calculator>\n          </Algorithm>\n        </GeometryRepresentation>\n      </View>\n    </div>\n  );\n}\n\nexport default Example;\n"],"names":["Slider","props","view","useContext","Contexts","type","min","max","step","value","onChange","e","Number","currentTarget","setValue","setTimeout","renderView","style","position","zIndex","left","top","useState","scaleFactor","setScaleFactor","width","height","showCubeAxes","mapper","colorByArrayName","scalarMode","interpolateScalarsBeforeMapping","property","edgeVisibility","colorDataRange","vtkClass","state","inputArrayToProcess","name","formula","xyz","Math","sin","sqrt","xResolution","yResolution"],"sourceRoot":""}